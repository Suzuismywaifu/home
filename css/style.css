:root {
  /* Light Mode Colors */
  --bg-color: #f0f0f5;
  --container-bg: #fff;
  --text-color: #333;
  --dropdown-item-bg: #f0f0f5;
  --dropdown-item-hover-bg: pink;
  --dropdown-link-color: gray;
  --dropdown-submenu-bg: #f9f9f9;
  --dropdown-submenu-link-color: black;
  --dropdown-submenu-link-hover-bg: #eee;
  --border-color: #ccc;
  --shadow-color: rgba(0, 0, 0, 0.08);
  --input-bg: #fff;
  --input-text-color: #333;
  --placeholder-color: #888;
}

body.dark-mode {
  /* Dark Mode Colors */
  --bg-color: #212121;
  --container-bg: #333;
  --text-color: #eee;
  --dropdown-item-bg: #444;
  --dropdown-item-hover-bg: #666; /* This variable is for other elements, but we'll override below for pink hover */
  --dropdown-link-color: #eee;
  --dropdown-submenu-bg: #2b2b2b;
  --dropdown-submenu-link-color: #eee;
  --dropdown-submenu-link-hover-bg: #3a3a3a;
  --border-color: #555;
  --shadow-color: rgba(0, 0, 0, 0.3);
  --input-bg: #444;
  --input-text-color: #eee;
  --placeholder-color: #bbb;
  }

body {
  /* Reverted body background to only use --bg-color */
  margin: 0;
  padding: 0; /* DEFAULT: No top padding (mobile-first) */
  font-family: Arial, sans-serif;
  background: var(--bg-color); /* Body background color will change with theme */
  text-align: center;
  position: relative;
  color: var(--text-color); /* Apply text color */
  transition: background 0.3s ease, color 0.3s ease; /* Smooth transition */
  }

/* Clock Display (Mobile-first defaults) */
#clockbox {
  font-size: 1.4em;
  font-weight: 500;
  margin: 15px auto 10px auto; /* Reduced margin for mobile-first */
  width: fit-content;
  color: var(--text-color); /* Use variable */
  position: relative;
  order: -1; /* Place it after the image, but before other default-ordered elements on mobile */
  transition: color 0.3s ease;
}

/* Main Container (Mobile-first defaults) */
.container {
  max-width: 960px;
  margin: 0 auto;
  background: var(--container-bg); /* Use variable for base background color */
  border-radius: 12px;
  padding: 15px; /* Reduced padding for mobile-first */
  box-shadow: 0 8px 24px var(--shadow-color); /* Use variable */
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  position: relative;
  transition: background 0.3s ease, box-shadow 0.3s ease;
}

/* Random Image (Mobile-first defaults) */
.image-box {
  position: static; /* DEFAULT: Static position for mobile-first */
  width: 60px; /* DEFAULT: Smaller size for mobile-first */
  height: 60px; /* DEFAULT: Smaller size for mobile-first */
  margin: 15px auto 0; /* DEFAULT: Center horizontally, add top margin for spacing */
  order: -2; /* DEFAULT: Place it before other flex items in the column */
  z-index: auto; /* DEFAULT: Reset z-index */
}

.image-box img {
  width: 100%;
  height: 100%;
  border-radius: 10px;
  display: block;
}


/* Image and Menu Row - Renamed to better reflect its purpose and now within container */
.header-row {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  width: 100%;
  gap: 15px;
  position: relative;
}

/* Dropdown Menu (Mobile-first defaults) */
.dropdown-menu {
  display: flex;
  flex-direction: column; /* DEFAULT: Force vertical stacking on mobile */
  list-style: none;
  margin: 0;
  padding: 0;
  gap: 5px; /* Adjust vertical spacing between items */
  width: 100%; /* Make the menu container take full width */
  align-items: center; /* Center the menu items horizontally within the menu container */
}

.dropdown-menu > li {
  position: relative; /* Needs to be positioned for its children (submenus) */
  width: 90%; /* Make each menu item take almost full width on mobile */
  margin: 0; /* Remove any horizontal margins */
  z-index: auto; /* KEY CHANGE: Remove explicit z-index for mobile li to fix stacking context */
}

.dropdown-menu > li > a {
  background: var(--dropdown-item-bg);
  color: var(--dropdown-link-color);
  padding: 10px;
  border-radius: 6px;
  cursor: pointer;
  font-size: 16px;
  border: 1px solid var(--border-color);
  text-decoration: none;
  text-align: center;
  display: block;
  white-space: normal; /* Allow text to wrap within the button if it's too long */
  transition: background 0.3s ease, color 0.3s ease, border-color 0.3s ease;
}

/* ⭐ UPDATED: Force pink for active dropdown item (when clicked on mobile) ⭐ */
.dropdown-menu > li.active > a {
  background-color: pink; /* Pink background when active (clicked open) */
}

/* Specific text color for main dropdown items when active in dark mode */
body.dark-mode .dropdown-menu > li.active > a {
    color: rgba(0, 0, 0, 0.8); /* Dark text on pink in dark mode */
}

.dropdown-menu li ul {
  position: absolute;
  max-height: 0;
  overflow: hidden;
  opacity: 0;
  display: block;
  top: 100%;
  left: 0;
  width: 100%;
  list-style: none;
  padding: 0;
  margin: 0;
  background: var(--dropdown-submenu-bg);
  box-shadow: 0 4px 8px var(--shadow-color);
  border-radius: 6px;
  z-index: 10; /* Keep this high so submenus appear above everything */
  transition: max-height 0.3s ease-in-out, opacity 0.3s ease-in-out, background 0.3s ease, box-shadow 0.3s ease;
}

.dropdown-menu li:hover ul {
  max-height: 500px;
  opacity: 1;
}

.dropdown-menu li ul li {
  width: 100%;
}

.dropdown-menu li ul li a {
  display: block;
  padding: 10px;
  text-decoration: none;
  color: var(--dropdown-submenu-link-color);
  white-space: normal; /* Allow wrapping for sub-menu items */
  transition: background 0.3s ease, color 0.3s ease;
}

.dropdown-menu li ul li a:hover {
  background: var(--dropdown-submenu-link-hover-bg);
}

/* Search Section */
.search-container {
  margin-top: 5px;
  position: relative;
  z-index: 1;
  display: flex; /* Changed to flex for centering form items easily */
  justify-content: center; /* Center content horizontally */
  align-items: flex-start; /* Align items to the start (top) if they have different heights */
  flex-wrap: wrap;
  gap: 10px;
  width: 100%;
}

.search-container form {
  display: flex;
  flex-direction: column; /* Default: Stack dropdown above input on mobile */
  align-items: center; /* Center items horizontally within the form */
  gap: 10px;
  width: 100%; /* Form takes full width of its container */
}

/* New container for input/textarea with button inside */
.input-with-button {
  position: relative;
  width: 100%; /* Takes full width of its parent (.search-container form or body for textarea) */
  max-width: 550px; /* Max width for consistency with search input */
}

.search-container .input-with-button input {
  padding: 10px 40px 10px 10px; /* Right padding for the button */
  width: 100%;
  box-sizing: border-box; /* Crucial for consistent sizing */
  font-size: 16px;
  border-radius: 6px;
  border: 1px solid var(--border-color);
  background-color: var(--input-bg);
  color: var(--input-text-color);
  transition: background 0.3s ease, color 0.3s ease, border-color 0.3s ease;
}

.search-container input::placeholder {
  color: var(--placeholder-color);
  transition: color 0.3s ease;
}

/* Textarea container (now similar to input-with-button) */
.textarea-container {
    position: relative; /* Make it relative for its absolute positioned button */
    margin-top: 30px;
    margin-bottom: 10px;
    width: 100%; /* Take full width of body context */
    max-width: 500px; /* Fixed max-width for textarea */
    margin: 30px auto 10px auto; /* Added margin: 0 auto; to center it */
}

.textarea-container textarea {
  text-align: center; /* Keep text-align center as requested by user previously */
  width: 100%; /* Fill the container */
  height: 150px;
  padding: 10px 40px 10px 40px; /* Adjusted padding to be symmetrical for visual centering */
  box-sizing: border-box; /* Include padding and border */
  font-size: 20px;
  resize: vertical;
  border-radius: 6px;
  border: 1px solid var(--border-color);
  background-color: var(--input-bg);
  color: var(--input-text-color);
  transition: background 0.3s ease, color 0.3s ease, border-color 0.3s ease;
}

textarea::placeholder {
  color: var(--placeholder-color);
  transition: color 0.3s ease;
}

/* ⭐ NEW: Hide scrollbar for textarea on all browsers ⭐ */
.textarea-container textarea::-webkit-scrollbar {
    width: 0; /* For vertical scrollbar in Webkit browsers (Chrome, Safari, Edge) */
    height: 0; /* For horizontal scrollbar in Webkit browsers */
    background: transparent; /* Makes the scrollbar track transparent */
}
.textarea-container textarea {
    scrollbar-width: none; /* For Firefox */
    -ms-overflow-style: none;  /* For IE and Edge */
}
/* ⭐ END NEW ⭐ */

/* Custom Dropdown for Search Engines */
.custom-dropdown {
  position: relative;
  display: inline-block;
  width: 140px; /* This is a fixed width */
  text-align: center;
}

.selected-engine {
  background: var(--dropdown-item-bg);
  color: var(--dropdown-link-color);
  padding: 10px;
  border-radius: 6px;
  cursor: pointer;
  font-size: 16px;
  border: 1px solid var(--border-color);
  white-space: nowrap; /* Keeping this for the selected engine display as it's usually short */
  text-align: center;
  transition: background 0.3s ease, color 0.3s ease, border-color 0.3s ease;
}

/* Force pink hover for the selected search engine dropdown */
.custom-dropdown:hover .selected-engine {
  background-color: pink; /* Always pink on hover */
}

/* Specific text color for search engine dropdown when hovered in dark mode */
body.dark-mode .custom-dropdown:hover .selected-engine {
    color: rgba(0, 0, 0, 0.8); /* Dark text on pink in dark mode */
}

.dropdown-options {
  max-height: 0;
  overflow: hidden;
  opacity: 0;
  display: block;
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%; /* Takes 100% of the parent .custom-dropdown's width (140px) */
  list-style: none;
  padding: 0;
  margin: 0;
  background: var(--dropdown-submenu-bg);
  box-shadow: 0 4px 8px var(--shadow-color);
  border-radius: 6px;
  z-index: 10;
  transition: max-height 0.2s ease-in-out, opacity 0.2s ease-in-out, background 0.3s ease, box-shadow 0.3s ease;
}

.custom-dropdown:hover .dropdown-options {
  max-height: 500px;
  opacity: 1;
}

.dropdown-options li {
  padding: 10px;
  color: var(--dropdown-submenu-link-color);
  cursor: pointer;
  white-space: normal; /* Added explicitly to allow wrapping */
  transition: background 0.3s ease, color 0.3s ease;
}

.dropdown-options li:hover {
  background: var(--dropdown-submenu-link-hover-bg);
}

/* Styling for the new clear buttons */
.clear-button {
  position: absolute;
  right: 5px;
  top: 50%;
  transform: translateY(-50%);
  padding: 5px 8px;
  font-size: 14px;
  border-radius: 50%;
  border: 1px solid var(--border-color);
  background-color: var(--dropdown-item-bg);
  color: var(--dropdown-link-color);
  cursor: pointer;
  transition: background 0.3s ease, color 0.3s ease, border-color 0.3s ease;
  width: 28px;
  height: 28px;
  display: flex; /* Ensure it uses flex for centering the 'X' */
  justify-content: center;
  align-items: center;
  /* HIDE BY DEFAULT until text is present */
  display: none;
}

.clear-button:hover {
  background-color: pink;
  color: rgba(0, 0, 0, 0.8);
}

/* Specific styling for the textarea's clear button */
.textarea-container .clear-button {
    top: 10px; /* Position from the top for textarea */
    transform: none; /* Remove transform for textarea button */
}

/* New: Hidden class for toggling visibility */
.hidden {
  display: none !important; /* Use !important to ensure it overrides other display properties */
}

/* Optional: Add transition for smoother hide/show */
.image-box,
.dropdown-menu > li:nth-child(3) { /* Target the 4chan li specifically */
  transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
}

/* When hidden, apply initial state for transition */
.image-box.hidden,
.dropdown-menu > li:nth-child(3).hidden {
  opacity: 0;
  transform: translateY(-20px); /* Example: move up slightly as it fades out */
}

/* --- Desktop Styles (Apply when viewport is wider than 768px) --- */
@media (min-width: 769px) {
  body {
    padding-top: 200px; /* Apply top padding for desktop */
  }

  /* Desktop Adjustments for image-box */
  .image-box {
    position: absolute; /* Absolute position for desktop */
    top: 25px;
    left: 25px;
    width: 150px;
    height: 150px;
    z-index: 1; /* Set z-index to 1 for desktop */
    order: 0; /* Reset order for desktop as it's positioned */
    margin: 0; /* Remove auto margin from mobile */
  }

  /* Desktop Adjustments for clockbox */
  #clockbox {
    margin: 30px auto 20px auto; /* Revert to desktop margins */
    order: 0; /* Reset order for desktop */
  }

  /* Desktop Adjustments for container padding */
  .container {
    padding: 25px; /* Revert to desktop padding */
  }

  /* Desktop Dropdown Menu Alignment */
  .dropdown-menu {
    flex-direction: row; /* Revert to horizontal flex for desktop */
    flex-wrap: wrap; /* Allow wrapping */
    gap: 10px; /* Horizontal gap */
    justify-content: center; /* Center horizontally */
    width: auto; /* Allow menu to size based on content */
  }

  .dropdown-menu > li {
    width: 170px; /* Revert to fixed width for desktop */
    z-index: 2; /* Give main menu items a higher z-index than the image */
  }

  .dropdown-menu > li > a {
    white-space: nowrap; /* Prevent wrapping for desktop menu items */
  }

  /* ⭐ UPDATED: Ensure hover only applies when NOT active on desktop ⭐ */
  .dropdown-menu > li:not(.active):hover > a {
    background-color: pink;
  }

  /* ⭐ NEW: Active class for desktop mode too ⭐ */
  .dropdown-menu > li.active > a {
    background-color: pink;
  }

  /* Specific text color for main dropdown items when hovered in dark mode */
  body.dark-mode .dropdown-menu > li:hover > a,
  body.dark-mode .dropdown-menu > li.active > a {
      color: rgba(0, 0, 0, 0.8); /* Dark text on pink in dark mode */
  }

  .search-container form {
      flex-direction: row; /* Revert to row for desktop to place dropdown next to input */
      justify-content: center; /* Center elements in the row */
  }

  .search-container .input-with-button {
      width: 100%; /* Changed from auto to 100% to ensure it takes max-width on desktop */
      max-width: 550px; /* Maintain max-width */
  }

  .textarea-container {
      margin-top: 30px;
      margin-bottom: 10px;
      width: 500px; /* Fix width for desktop to prevent auto-sizing */
      margin: 30px auto 10px auto; /* Ensure it stays centered on desktop too */
  }
}

/* Override for Mobile Landscape (e.g., S24 Ultra in landscape) */
/* This targets devices that are wide (like desktop) but also relatively short (like a phone) */
@media (min-width: 769px) and (max-height: 600px) {
  body {
    padding-top: 0; /* Remove the extra padding applied in desktop mode */
  }

  /* Revert image-box to its mobile default styling/positioning */
  .image-box {
    position: static; /* Back to normal document flow */
    width: 60px;
    height: 60px;
    margin: 15px auto 0; /* Center horizontally, add top margin */
    order: -2; /* Ensure it comes first in flex flow */
    z-index: auto; /* Reset z-index */
  }

  /* Revert clockbox to its mobile default styling/positioning */
  #clockbox {
    margin: 15px auto 10px auto; /* Mobile margins */
    order: -1; /* Ensure it comes after image, before others */
  }

  /* Revert container padding to mobile default */
  .container {
    padding: 15px; /* Mobile padding */
  }

  /* Revert dropdown menu to mobile vertical stacking */
  .dropdown-menu {
    flex-direction: column; /* Vertical stacking */
    gap: 5px;
    width: 100%;
    align-items: center;
  }
  .dropdown-menu > li {
    width: 90%; /* Mobile width */
    z-index: auto; /* Reset z-index */
  }
  .dropdown-menu > li > a {
    white-space: normal; /* Allow text wrapping */
  }

  /* ⭐ UPDATED: Ensure hover only applies when NOT active on mobile landscape too ⭐ */
  .dropdown-menu > li:not(.active):hover > a {
    background-color: var(--dropdown-item-bg); /* Reset to normal background */
  }

  /* ⭐ NEW: Active class for mobile landscape mode too ⭐ */
  .dropdown-menu > li.active > a {
    background-color: pink;
  }

  /* Specific text color for main dropdown items when active in dark mode */
  body.dark-mode .dropdown-menu > li.active > a {
      color: rgba(0, 0, 0, 0.8); /* Dark text on pink in dark mode */
  }

  /* Revert search form to mobile vertical stacking */
  .search-container form {
      flex-direction: column; /* Vertical stacking */
      align-items: center;
  }
  /* Ensure these maintain mobile-first behavior on mobile landscape too */
  .search-container .input-with-button {
      width: 100%;
      max-width: 550px; /* Maintain overall max-width control */
  }

  /* Revert textarea container to mobile width and margins */
  .textarea-container {
      width: 100%; /* Mobile width */
      max-width: 500px; /* Max width remains for overall form width control */
      margin: 30px auto 10px auto; /* Mobile margins */
  }
}
